{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/d3-dsv/src/dsv.js","../../node_modules/d3-dsv/src/csv.js","../../node_modules/d3-dsv/src/tsv.js","../../node_modules/d3-dsv/src/autoType.js","../../node_modules/bignumber.js/bignumber.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();","/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","<script>\n\timport {tsvParse, tsvFormat,csvFormat,autoType} from 'd3-dsv';\n\timport BigNumber from \"bignumber.js\";\n\tlet csv = '';\n\tlet data = [];\n\tlet columns=[];\n\tlet tidy=[];\n\tlet name = 'category';\n\tlet tidycolumns=[];\n\tlet href ='';\n\tlet repeat = null;\n\tlet repeatCheck = false;\n\tlet repeatCol = null;\n\t\n\t\n\t\n\tfunction readthedata(csv){\n \t\tdata=tsvParse(csv,autoType)\n\t\tcolumns = data.columns\n\t}\n\n\t\n\tfunction selectAll(){\n\t\tvar myNodeList = document.querySelectorAll(\"input[name=checkboxes]\");\n\t\tfor (let i = 1; i <\tmyNodeList.length; i++) {\n\t\t\tmyNodeList[i].checked = true;\n\t\t}\n\t\ttidydata(data)\n\t}\n\n\tfunction tidydata(data){\n// \t\tfind columns checked\n\t \tvar checked=[];\t\n\t\tdocument.querySelectorAll('input[name=checkboxes]:checked').forEach(function(d){\n\t\t\tchecked.push(d.value)\n\t\t});\n// \t\tkeep unchecked columns\n\t\tvar notChecked=[];\n\t\tdocument.querySelectorAll('input[name=checkboxes]:not(:checked)').forEach(function(d){\n\t\t\tnotChecked.push(d.value)\n\t\t});\n\n\t\t\n// \t\tfind repeated column\n\t\tif(repeatCheck){\n\t\t\trepeatCol = document.querySelector('input[name=repeat]:checked').value\t\t\n\n\t\t\tconst index = notChecked.indexOf(repeat);\n\t\t\tif (index > -1) {\n\t\t\t\tnotChecked.splice(index, 1);\n\t\t\t}\n\t\t} else {\n\t\t\trepeatCol = null;\n\t\t}\t\n\t\t\nconsole.log(repeatCheck,repeat, checked,notChecked)\n\t\n\t\tvar tidied=[]\n\t\tdata.forEach(function(e){\n\t\t\tchecked.forEach(function(d){\n// \t\t\t\tfor each checked column, put it in an object\n\t\t\t\tvar obj = {}\n\t\t\t\tobj[name]=d\n\t\t\t\tnotChecked.forEach(function(d){\n\t\t\t\t\tobj[d]=e[d]\n\t\t\t\t})\n\t\t\t\tobj[\"value\"]=e[d]\n\t\t\t\tif(repeat){obj[\"series\"]=d}\n\t\t\t\ttidied.push(obj)\n\t\t\t\t\n// \t\t\t\tnow do it for the repeated column\n\t\t\t\tif(repeat){\n\t\t\t\t\tvar repeatedObj={}\n\t\t\t\t\trepeatedObj[name]=d\n\t\t\t\t\tnotChecked.forEach(function(d){\n\t\t\t\t\t\trepeatedObj[d]=e[d]\n\t\t\t\t\t})\n\t\t\t\t\trepeatedObj['value']=e[repeatCol]\n\t\t\t\t\trepeatedObj['series']=repeatCol\n\t\t\t\t\ttidied.push(repeatedObj)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\t\n\t\t})\n\t\thref=encodeURI('data:text/csv;charset=utf-8,'+csvFormat(tidied))\n\t\ttidy = tsvParse(tsvFormat(tidied))\n\t\ttidycolumns = tidy.columns\n\t}\n\t\n\tfunction timesTen() {\n  tidy.forEach(d => {\n    if (!BigNumber(d.value).isNaN()) {\n      d.value = BigNumber(d.value).times(10);\n    }\n  });\n  tidy = tidy;\n}\n\nfunction divideTen() {\n  tidy.forEach(d => {\n    if (!BigNumber(d.value).isNaN()) {\n      d.value = BigNumber(d.value).div(10);\n    }\n  });\n  tidy = tidy;\n}\n\n$:if(repeat&&repeatCheck)tidydata(data);\n\n$:if(repeatCheck==false)repeat=null;\n\n</script>\n\n<h1>Let's tidy your data!</h1>\n<h2>\n\tStep 1. Paste your data\n</h2>\n<label for=\"csvdata\">Paste data in from Excel</label><br/>\n<textarea on:input=\"{e => readthedata(e.target.value)}\" rows=10 columns=10 id=\"csvdata\"></textarea>\n\n<p>\n\tHere's your table\n</p>\n\n<div class=\"tablewrapper\">\n\t<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t{#each columns as d}\n\t\t\t<th>{d}</th>\n\t\t\t{/each}\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{#each data as d}\n\t\t\t<tr>\n\t\t\t\t{#each Object.keys(d) as e}\n\t\t\t\t<td>{d[e]}</td>\n\t\t\t\t{/each}\n\t\t\t</tr>\n\t\t\t{/each}\n\t\t</tbody>\n\t</table>\n</div>\n\n<h2>\n\tStep 2: Choose your columns to merge\n</h2>\n\n\n\t\n\n<div>\n<p>\n\tChoose which columns to combine\n</p>\n\n<button on:click={selectAll}>\n\tSelect all except first column\n</button>\n\n\t{#each columns as d}\n\t<div class=\"item\">\n\t\t<input name=\"checkboxes\" type=\"checkbox\" on:input={e=>tidydata(data)} id={d} value={d}><label for={d}>{d}</label>\n\t</div>\n\t{/each}\n\t\n</div>\n<br/>\n<h4>Optional</h4>\n<div>\n\t<label for=\"repeatcheck\">I need to repeat a column.</label> <input id=\"repeatcheck\" type=\"checkbox\" bind:checked={repeatCheck}>\n\n\t{#if repeatCheck}\n\t\t<p>\n\t\t\tWhich column to repeat?\n\t</p>\n\t\t{#each columns as d}\n\t\t<div class=\"item\">\n\t\t\t<input name=\"repeat\" type=\"radio\" on:input={e=>tidydata(data)} bind:group={repeat} id={'radio'+d} value={d}><label for={'radio'+d}>{d}</label>\n\t\t</div>\n\t\t{/each}\n\t{/if}\n</div>\n\n\n<br/>\n<div>\n<label for=\"columnname\">\n\tChoose a new column name \n</label>\n<input id=\"columnname\" on:input={e=>tidydata(data)} bind:value={name} type=\"text\">\n\t</div>\n<h2>\n\tStep 3. Check your tidy data\n</h2>\n<p>\n\tHere's your tidy data\n</p>\n<button on:click={timesTen}>Multiply values by 10</button>\n<button on:click={divideTen}>Divide values by 10</button>\n<!-- These buttons aren't working yet, struggling to get string to convert to numbers -->\n<div class=\"tablewrapper\">\n\t<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t{#each tidycolumns as d}\n\t\t\t<th>{d}</th>\n\t\t\t{/each}\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t{#each tidy as d}\n\t\t\t<tr>\n\t\t\t\t{#each Object.keys(d) as e}\n\t\t\t\t<td>{d[e]}</td>\n\t\t\t\t{/each}\n\t\t\t</tr>\n\t\t\t{/each}\n\t\t</tbody>\n\t</table>\n</div>\n\n<h2>\n\tStep 4. Download your data\n</h2>\n<p>\n\tHappy with your new data? Let's download it\n</p>\n<button>\n\t<a href={href} download='data.csv'>Download as .csv</a>\n</button>\n\n<style>\n\t.tablewrapper{\n\t\theight:150px;\n\t\toverflow:scroll\n\t}\n\t\n\tthead tr {\n    background-color: #206095;\n    color: #ffffff;\n    text-align: left;\n}\n\tth, td {\n    padding: 5px;\n\t}\n\t\n\ttbody tr {\n\t\t\tborder-bottom: 1px solid #dddddd;\n\t}\n\n\ttbody tr:nth-of-type(even) {\n\t\t\tbackground-color: #f3f3f3;\n\t}\n\n\ttbody tr:last-of-type {\n\t\t\tborder-bottom: 2px solid #206095;\n\t}\n\t.item{\n\t\tdisplay:block;\n\t}\n\t\n\t.item *{\n\t\tdisplay:inline;\n\t\tpadding: 5px;\n\t}\n\t\n\t\n</style>","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","destroy_component","filtered","targets","c","indexOf","flush_render_callbacks","on_destroy","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","EOL","EOF","objectConverter","columns","Function","JSON","stringify","join","inferColumns","rows","columnSet","row","column","pad","width","s","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","f","t","N","I","n","eof","eol","token","j","slice","replace","preformatBody","formatValue","formatRow","Date","test","parse","convert","object","customConverter","format","concat","formatBody","formatRows","csvFormat","tsv","tsvParse","tsvFormat","autoType","key","number","trim","NaN","match","fixtz","getHours","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","z","r","compare","x","y","xc","yc","k","intCheck","min","max","Error","String","isOdd","toExponential","str","charAt","toFixedPoint","len","zs","BigNumber","clone","configObject","div","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","prototype","constructor","toString","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","v","alphabet","caseChanged","isNum","_isBigNumber","search","substring","round","DEBUG","toUpperCase","toLowerCase","rm","id","c0","ne","maxOrMin","args","normalise","sd","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","call","maximum","arguments","minimum","random","dp","rand","Uint32Array","copy","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","pow","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","gt","isGreaterThanOrEqualTo","gte","isLessThan","lt","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","Symbol","toStringTag","for","th","t_value","td","tr","label","t0","t0_value","group","_inputs","inputs","input_id_value","label_for_value","create_if_block","h1","h20","label0","br0","textarea","p0","div0","table0","thead0","tr0","tbody0","h21","div1","button0","br1","h4","div2","label1","input0","br2","div3","label2","input1","h22","button1","button2","div4","table1","thead1","tr1","tbody1","h23","p3","button3","tidy","tidycolumns","href","repeat","repeatCheck","repeatCol","readthedata","csv","$$invalidate","tidydata","checked","querySelectorAll","notChecked","querySelector","console","log","tidied","repeatedObj","encodeURI","myNodeList","__value","body"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}